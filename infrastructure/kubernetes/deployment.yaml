apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdx-notification-service
  namespace: cdx-production
  labels:
    app: cdx-notification-service
    version: v1.0.0
    component: notification-service
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: cdx-notification-service
  template:
    metadata:
      labels:
        app: cdx-notification-service
        version: v1.0.0
        component: notification-service
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '3000'
        prometheus.io/path: '/metrics'
    spec:
      serviceAccountName: cdx-notification-service
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      initContainers:
        - name: wait-for-dependencies
          image: busybox:1.35
          command:
            - sh
            - -c
            - |
              until nc -z mongodb-service 27017; do echo 'Waiting for MongoDB...'; sleep 2; done;
              until nc -z redis-service 6379; do echo 'Waiting for Redis...'; sleep 2; done;
              until nc -z rabbitmq-service 5672; do echo 'Waiting for RabbitMQ...'; sleep 2; done;
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
            limits:
              cpu: 50m
              memory: 64Mi
      containers:
        - name: cdx-notification-service
          image: cdx/notification-service:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
            - name: metrics
              containerPort: 3000
              protocol: TCP
          env:
            - name: NODE_ENV
              value: 'production'
            - name: PORT
              value: '3000'
            - name: LOG_LEVEL
              value: 'info'
            - name: DATABASE_URI
              valueFrom:
                secretKeyRef:
                  name: cdx-notification-secrets
                  key: database-uri
            - name: DATABASE_NAME
              value: 'cdx_notification_prod'
            - name: REDIS_HOST
              value: 'redis-service'
            - name: REDIS_PORT
              value: '6379'
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cdx-notification-secrets
                  key: redis-password
            - name: REDIS_DB
              value: '0'
            - name: RABBITMQ_URL
              valueFrom:
                secretKeyRef:
                  name: cdx-notification-secrets
                  key: rabbitmq-url
            - name: RABBITMQ_EXCHANGE
              value: 'cdx-notification-exchange'
            - name: RABBITMQ_QUEUE
              value: 'cdx-notification-queue'
            - name: NOVU_API_KEY
              valueFrom:
                secretKeyRef:
                  name: cdx-notification-secrets
                  key: novu-api-key
            - name: NOVU_APP_ID
              value: 'cdx-notification-app'
            - name: NOVU_BACKEND_URL
              value: 'https://novu.cdx.com'
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: cdx-notification-secrets
                  key: jwt-secret
            - name: JWT_EXPIRES_IN
              value: '1h'
            - name: AUTH_SERVICE_URL
              value: 'https://auth-api.cdx.com'
            - name: CORS_ORIGIN
              value: 'https://app.cdx.com,https://admin.cdx.com'
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: logs
              mountPath: /app/logs
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: logs
          emptyDir: {}
        - name: tmp
          emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: cdx-notification-service
  namespace: cdx-production
  labels:
    app: cdx-notification-service
    component: notification-service
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
    - name: metrics
      port: 3000
      targetPort: metrics
      protocol: TCP
  selector:
    app: cdx-notification-service
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cdx-notification-service-hpa
  namespace: cdx-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cdx-notification-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
        - type: Pods
          value: 2
          periodSeconds: 60
      selectPolicy: Max
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: cdx-notification-service-pdb
  namespace: cdx-production
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: cdx-notification-service
