version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: notification-mongodb-prod
    restart: always
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: notification-service
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongodb-init.js:/docker-entrypoint-initdb.d/mongodb-init.js:ro
    networks:
      - notification-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: notification-redis-prod
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - notification-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: notification-rabbitmq-prod
    restart: always
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - notification-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Novu
  novu:
    image: novuhq/novu:latest
    container_name: notification-novu-prod
    restart: always
    ports:
      - '3001:3001'
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGO_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/notification-service?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      - mongodb
      - redis
    networks:
      - notification-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Notification Service (Production)
  notification-service:
    image: notification-service:latest
    container_name: notification-service-prod
    restart: always
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/notification-service?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      RABBITMQ_URI: amqp://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@rabbitmq:5672
      NOVU_API_URL: http://novu:3001
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - mongodb
      - redis
      - rabbitmq
      - novu
    networks:
      - notification-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

volumes:
  mongodb_data:
  redis_data:
  rabbitmq_data:

networks:
  notification-network:
    driver: bridge
